[buildout]
parts +=
    robot
    wxPython-post-make-hook
    wxPython
    ride
allow-hosts +=
    code.google.com
    robotframework.googlecode.com
    robotframework-ride.googlecode.com

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
scripts =
    robot-server
    robot

[wxPython-post-make-hook]
recipe = collective.recipe.template
input = inline:
    import os
    import sys
    import subprocess
    wxPython_post_make_hook = lambda o, b:\
        subprocess.call([sys.executable, 'setup.py',\
            'WX_CONFIG=%s' % os.path.join(o['location'], 'bin', 'wx-config'),\
            'WXPORT=osx_cocoa', 'CORE_ONLY=1', 'install', '--home=%s' %\
            o['location'],], cwd=os.path.join(os.getcwd(), 'wxPython'))
output = ${buildout:parts-directory}/hooks.py

[wxPython]
# Thanks to: http://geekscrap.com/2010/01/install-wxpython-in-buildout/
recipe = hexagonit.recipe.cmmi
url = http://downloads.sourceforge.net/wxpython/wxPython-src-2.9.4.0.tar.bz2
post-make-hook = ${buildout:parts-directory}/hooks.py:wxPython_post_make_hook
configure-options =
    --enable-display
    --enable-optimise
    --with-libjpeg=builtin
    --with-libpng=builtin
    --with-libtiff=builtin
    --with-zlib=builtin
# OSX:
    --enable-monolithic
    --enable-framework
    --with-osx_cocoa
# Linux:
#   --with-gtk2

[system-python]
executable = /usr/bin/python

[ride]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    robotframework-ride
entry-points = ride=robotide:main
scripts = ride
python = system-python
extra-paths = ${wxPython:location}/lib/python
initialization =
    import os
    os.putenv("LD_LIBRARY_PATH", "${wxPython:location}/lib}")
arguments = *sys.argv[1:]
